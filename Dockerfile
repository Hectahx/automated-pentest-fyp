# Use Kali Linux as the base image
FROM kalilinux/kali-rolling


ENV DEBIAN_FRONTEND=noninteractive
ENV DISPLAY=:99

# Update and install necessary packages
RUN apt-get update \
    && apt-get install -y wget gnupg2 xvfb unzip curl \
    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list' \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && wget -O /tmp/chromedriver-linux64.zip https://storage.googleapis.com/chrome-for-testing-public/123.0.6312.122/linux64/chromedriver-linux64.zip \
    && unzip /tmp/chromedriver-linux64.zip -d /tmp \
    && mv /tmp/chromedriver-linux64/chromedriver /usr/bin/ \
    && chmod +x /usr/bin/chromedriver \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Update and install software
RUN apt-get update && apt-get -y upgrade && apt-get -y install kali-tools-top10 python3-pip

# Set the working directory to /myapp
WORKDIR /myapp

# Install any needed packages specified in requirements.txt
COPY requirements.txt /myapp/
RUN pip install -r requirements.txt

# Copy the current directory contents into the container at /myapp
COPY . /myapp

# Make port 5000 available to the world outside this container
EXPOSE 5000

# Define environment variable
ENV NAME venv

# Run run.py when the container launches
CMD ["python3", "run.py"]