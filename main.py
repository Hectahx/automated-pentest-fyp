#!/usr/bin/env python3

import asyncio
from cmds.scrapyCmd import run_spider
from cmds.sqlmapCmd import run_sqlmap
from cmds.lfimapCmd import run_lfimap
from util.nmap import scan_target
from util.process_urls import process_urls

async def main(target):
    collected_urls = run_spider(target)
    all_urls = process_urls(collected_urls)
    #print(all_urls)

    login_urls = all_urls["login"]
    sql_lfi_urls = all_urls["sql_lfi"]

    # These commands run lfimap/sqlmap - Iteration is needed to loop over the array of URLs provided - Just using one for testing however
    sqlmap_task = asyncio.create_task(run_sqlmap(login_urls[0]))
    lfimap_task = asyncio.create_task(run_lfimap(sql_lfi_urls[0]))

    await asyncio.gather(sqlmap_task, lfimap_task)

    sqlmap_output = sqlmap_task.result()
    lfimap_output = lfimap_task.result()
    
    if sqlmap_output is not None:
         ## sqlmap_output[0] == bool - sqlmap_output[1] == vulns found
        if(sqlmap_output[0]):
            print("The page is vulnerable to SQL Injection!")
            print(sqlmap_output[1])
        else:
            print("This page is not vulnerable to SQL Injection")
    else:
        print(sqlmap_output[1])
    
    if lfimap_output is not None:
        ## lfimap_output[0] == bool - lfimap_output[1] == vulns found - lfimap_output[2] = URL
        if(lfimap_output[0]):
            print(f"{lfimap_output[2]} is vulnerable to Local File Inclusion!")
            print(lfimap_output[1]) # Number of vulns found
        else:
            print(f"{lfimap_output[2]} is not vulnerable to Local File Inclusion")
    else:
        print(lfimap_output[1])


if __name__ == '__main__':
    target = 'http://192.168.124.132/login'  # Replace with the IP address of the target host
    asyncio.run(main(target))