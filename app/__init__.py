from flask import Flask
from flask_sqlalchemy import SQLAlchemy
import os
from .auth.routes import auth_bp
from .scan.routes import scan_bp
from .routes import main_bp
from .extensions import db, bcrypt
from .utils import celery_init_app
from flask_login import LoginManager
from .models import User




def create_app():
    app = Flask(__name__)
    # Configuring App
    app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql+pymysql://root:root@localhost/fyp'
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    app.config['SECRET_KEY'] = str(os.urandom(16))

    app.config["CELERY"] = {
        "broker_url":"redis://127.0.0.1:6379/0",
        "result_backend":"redis://127.0.0.1:6379/0",
    }

    # Flask-Login setup
    login_manager = LoginManager()
    login_manager.init_app(app)
    login_manager.login_view = 'auth.login'
    login_manager.login_message_category = "warning"

    
    @login_manager.user_loader
    def load_user(user_id):
        # Assuming User.get(user_id) retrieves the user from the database
        return User.get(user_id)


    db.init_app(app)
    bcrypt.init_app(app)

    celery = celery_init_app(app)
    celery.set_default()

    
    app.register_blueprint(auth_bp, url_prefix='/auth')
    app.register_blueprint(scan_bp, url_prefix='/scan')
    app.register_blueprint(main_bp)

    return app, celery