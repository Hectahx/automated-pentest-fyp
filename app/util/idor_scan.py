import aiohttp
import asyncio
import random
import re
import requests
from requests.exceptions import RequestException

def is_website_online(url, cookies=None):
    try:
        # If cookies are provided, they are sent with the request
        response = requests.head(url, timeout=5, cookies=cookies)
        return response.status_code == 200
    except RequestException:
        # Handles all exceptions that might occur during the request
        return False

async def fetch_content(session, url, new_id):
    # Replace the ID in the URL
    updated_url = re.sub(r'(?<=id=)\d+', str(new_id), url, 1)
    async with session.get(updated_url) as response:
        return await response.text()

async def check_idor(full_url):
    if not is_website_online(full_url):
        print(f"Page does not exist - IDOR")
        result = {"url": full_url, "is_vulnerable": None, "error" : True, "error_message": "Invalid URL"}
        return result
    # Extract the current ID from the URL
    current_id = re.search(r'(?<=id=)\d+', full_url)
    if not current_id:
        return {"url": full_url, "is_vulnerable": False, "message": "No ID detected in URL"}

    current_id = current_id.group(0)

    async with aiohttp.ClientSession() as session:
        known_content = await fetch_content(session, full_url, current_id)

        random_contents = []
        for _ in range(3):
            random_id = random.randint(1, 100)  # Assuming ID is a number between 1 and 100
            print(random_id)
            content = await fetch_content(session, full_url, random_id)
            random_contents.append(content)

        # Check if all random contents are the same and different from the known content
        if all(content == random_contents[0] for content in random_contents):
            return {"url": full_url, "is_vulnerable": False, "message": "No IDOR Detected", "error_message" : "" }
        else:
            return {"url": full_url, "is_vulnerable": True, "message": "Potential IDOR Detected", "error_message" : ""}

# Example usage
async def main():
    full_url = "http://192.168.124.132/login_secured/index.php?id=1"  # Full URL with ID
    result = await check_idor(full_url)
    print(result)

if __name__ == "__main__":
    asyncio.run(main())
