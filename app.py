from flask import Flask, request, render_template, jsonify, redirect, url_for
import asyncio
from util.run_scan import run_scan_multi

app = Flask(__name__)

results=None

@app.route('/', methods=['GET'])
def index():
    return render_template('index.html')

@app.route('/scan', methods=['POST'])
async def scan():
    global results
    target = request.form['target']
    results = await run_scan_multi(target)

    results["output"]["lfi"] = [{'url': '192.168.124.132/login/user.php?page=view_profile.php', 'is_vulnerable': True, 'vulns_found': {'num_vulns': 'Number of vulnerabilities found: 3', 'vuln_techniques': {'http://192.168.124.132/login/user.php?page=php%3A%2F%2Ffilter%2Fresource%3D%2Fetc%2Fpasswd': 'filter wrapper', 'http://192.168.124.132/login/user.php?page=file%3A%2F%2F%2Fetc%2Fpasswd': 'file wrapper', 'http://192.168.124.132/login/user.php?page=/etc/passwd': 'path truncation'}}, 'error': False, 'error_message': None}]
    results["summary"]["lfi"]["vulnerable_urls"] = ["192.168.124.132/login/user.php?page=view_profile.php"]

    return render_template('results.html', results=results["summary"])

@app.route('/scan/sql', methods=['GET'])
async def sql():
    global results
    if results is None:
        return redirect(url_for('index'))
    return render_template('results_sql_injection.html', results=results["output"]["sql_injection"])

@app.route('/scan/lfi', methods=['GET'])
async def lfi():
    global results
    if results is None:
        return redirect(url_for('index'))
    return render_template('results_lfi.html', results=results["output"]["lfi"])

@app.route('/scan/csrf', methods=['GET'])
async def csrf():
    global results
    if results is None:
        return redirect(url_for('index'))
    return render_template('results_csrf.html', results=results["output"]["csrf"])

@app.route('/scan/idor', methods=['GET'])
async def idor():
    global results
    if results is None:
        return redirect(url_for('index'))
    return render_template('results_idor.html', results=results["output"]["idor"])

if __name__ == '__main__':
    app.run(debug=True,host='0.0.0.0')
3